{"version":3,"sources":["components/SingleItem/SingleItem.js","components/Footer/Footer.js","components/Overlay/Overlay.js","components/Loader/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["SingleItem","product","itemAction","id","brandName","productName","Quantity","MRP","Price","ImageUrl","offerText","count","className","src","alt","onClick","disabled","React","memo","Footer","totalQuantityCount","totalPrice","setShowPopup","showPopup","Overlay","resetAfterTransaction","Loader","App","useState","productList","setProductList","setTotalQuantityCount","setTotalPrice","useEffect","axios","get","then","res","prev","data","catch","error","console","log","handleItemAction","action","map","item","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.418b38f7.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./SingleItem.css\"\r\nconst SingleItem = ({ product, itemAction }) => {\r\n  const {\r\n    id,\r\n    brandName,\r\n    productName,\r\n    Quantity,\r\n    MRP,\r\n    Price,\r\n    ImageUrl,\r\n    offerText,\r\n    count\r\n  } = product\r\n\r\n  return (\r\n    <div className=\"main-card\">\r\n      <div className=\"left\">\r\n        <img className=\"left-img\" src={ImageUrl} alt=\"\" />\r\n        <p className=\"left-offer\">\r\n          {\" \"}\r\n          {offerText === 0 ? \"No Discount\" : `${offerText}% OFF`}\r\n        </p>\r\n      </div>\r\n      <div className=\"right\">\r\n        <p>{brandName}</p>\r\n        <p>{productName}</p>\r\n        <p>{Quantity}</p>\r\n        <p>MRP {MRP}</p>\r\n        <p>Rs {Price}</p>\r\n        <div className=\"button-group\">\r\n          <button\r\n            className=\"btn btn-add-cart\"\r\n            onClick={() => itemAction(id, \"+\")}\r\n          >\r\n            ADD CART\r\n          </button>\r\n          <div className=\"plus-minus\">\r\n            <button\r\n              className=\"btn btn-circle\"\r\n              onClick={() => itemAction(id, \"+\")}\r\n            >\r\n              +\r\n            </button>{\" \"}\r\n            <span className=\"per-item-count\">{count}</span>\r\n            <button\r\n              className=\"btn btn-circle\"\r\n              onClick={() => itemAction(id, \"-\")}\r\n              disabled={count === 0}\r\n            >\r\n              -\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(SingleItem)\r\n","import React from \"react\"\r\nimport \"./Footer.css\"\r\nconst Footer = ({\r\n  totalQuantityCount,\r\n  totalPrice,\r\n  setShowPopup,\r\n  showPopup\r\n}) => {\r\n  return (\r\n    <footer className=\"foooter\">\r\n      <div className=\"ftr-left\">\r\n        <p>Qty {totalQuantityCount}</p>\r\n        <p>Total {totalPrice}</p>\r\n      </div>\r\n      <div className=\"ftr-right\">\r\n        <button\r\n          onClick={() => setShowPopup(true)}\r\n          disabled={totalPrice === 0 || totalQuantityCount === 0 || showPopup}\r\n        >\r\n          {\" \"}\r\n          CHECKOUT\r\n        </button>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\nimport \"./Overlay.css\"\r\nconst Overlay = ({\r\n  totalPrice,\r\n  showPopup,\r\n  setShowPopup,\r\n  resetAfterTransaction\r\n}) => {\r\n  if (showPopup) {\r\n    return (\r\n      <div className=\"overlay\">\r\n        <div className=\"pop-up-window\">\r\n          <button className=\"cross-btn\" onClick={resetAfterTransaction}>\r\n            X\r\n          </button>\r\n          <p>â‚¹{totalPrice}</p>\r\n          <p>Transaction Successful</p>\r\n          <div className=\"btn-popup-group\">\r\n            <button className=\"shop-more\" onClick={() => setShowPopup(false)}>\r\n              Shop More\r\n            </button>\r\n            <button\r\n              className=\"shop-more cancel\"\r\n              onClick={resetAfterTransaction}\r\n            >\r\n              I am Done\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default Overlay\r\n","import React from \"react\"\r\nimport \"./Loader.css\"\r\nconst Loader = () => {\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <div className=\"loader-main\">\r\n        <div className=\"loader\"></div>\r\n        <div className=\"loader-text\">\r\n          Fetching Data from Heroku, it might take some time.\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import \"./App.css\"\nimport SingleItem from \"./components/SingleItem/SingleItem\"\nimport axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport Footer from \"./components/Footer/Footer\"\nimport Overlay from \"./components/Overlay/Overlay\"\nimport Loader from \"./components/Loader/Loader\"\nfunction App() {\n  const [productList, setProductList] = useState([])\n  const [totalQuantityCount, setTotalQuantityCount] = useState(0)\n  const [totalPrice, setTotalPrice] = useState(0)\n  const [showPopup, setShowPopup] = useState(false)\n  useEffect(() => {\n    axios\n      .get(\"https://mobiotics-fake-server.herokuapp.com/products\")\n      .then(res =>\n        setProductList(prev => {\n          prev = res.data\n          // console.log(prev)\n          return prev\n        })\n      )\n      .catch(error => console.log(error))\n  }, [])\n  const handleItemAction = (id, action) => {\n    console.log(id)\n    setProductList(\n      productList.map(item => {\n        if (item.id === id) {\n          if (action === \"+\") {\n            item.count++\n            setTotalQuantityCount(prev => prev + 1)\n            setTotalPrice(prev => prev + item.Price)\n          } else {\n            item.count--\n            setTotalQuantityCount(prev => prev - 1)\n            setTotalPrice(prev => prev - item.Price)\n          }\n        }\n        return item\n      })\n    )\n  }\n\n  const resetAfterTransaction = () => {\n    setShowPopup(false)\n    setTotalPrice(0)\n    setTotalQuantityCount(0)\n    setProductList(\n      productList.map(item => {\n        item.count = 0\n        return item\n      })\n    )\n  }\n  return (\n    <div className=\"App \">\n      <div className=\"container\">\n        {productList.length === 0 ? (\n          <Loader />\n        ) : (\n          productList.map(item => {\n            // console.log(productList)\n            return (\n              <SingleItem\n                product={item}\n                key={item.id}\n                itemAction={handleItemAction}\n              ></SingleItem>\n            )\n          })\n        )}\n      </div>\n      {productList.length === 0 ? null : (\n        <Footer\n          totalQuantityCount={totalQuantityCount}\n          totalPrice={totalPrice}\n          setShowPopup={setShowPopup}\n          showPopup={showPopup}\n        />\n      )}\n      <Overlay\n        totalPrice={totalPrice}\n        setShowPopup={setShowPopup}\n        showPopup={showPopup}\n        resetAfterTransaction={resetAfterTransaction}\n      ></Overlay>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}